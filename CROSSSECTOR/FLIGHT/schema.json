{
  "$schema": "http://json-schema.org/schema#",
  "$schemaVersion": "0.0.1",
  "$id": "https://smart-data-models.github.io/dataModel.Energy/ThreePhaseAcMeasurement/schema.json",
  "title": "Smart Data Models - Energy / Three Phase AC Measurement",
  "description": "An electrical  measurement from a system that uses three phase alternating current.",
  "modelTags": "",
  "derivedFrom": "",
  "license": "https://smart-data-models.github.io/dataModel.Energy/ThreePhaseAcMeasurement/LICENSE.md",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
    },
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Location-Commons"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "description": "Property. NGSI Entity Type. It must be equal to Flight.",
          "enum": [
            "Flight"
          ]
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Property. Model:'https://schema.org/DateTime'. Reported date time creation corresponding to this observation."
        },
		"capturedVideo": {
		  "type": "object",
          "description": "Property.  It contains information for the captured video.",
          "properties": {
			"name": {
			  "type": "string",
			  "description": "Property. Model:'https://schema.org/Text'. Name corresponding to this video."
			},
			"width": {
			  "type": "number",
			  "description": "Property. Model:'https://schema.org/Number'. Width corresponding to this video."
			},
			"height": {
			  "type": "number",
			  "description": "Property. Model:'https://schema.org/Number'. Height corresponding to this video."
			},
			"fps": {
			  "type": "number",
			  "description": "Property. Model:'https://schema.org/Number'. Frames Per Second corresponding to this video."
			}
		  }
        },
		"startingPointOfFlight": {
			"type": "object",
			"description": "Property. It contains information for the starting point of the flight.",
			"items": {
				"gimbalPitch": {
				  "type": "number",
				  "description": "Property. Model:'https://schema.org/Number'. Gimbal Pitch corresponding to this point of flight."
				},
				"altitude": {
				  "type": "number",
				  "description": "Property. Model:'https://schema.org/Number'. Altitude corresponding to this point of flight."
				},
				"heading": {
				  "type": "number",
				  "description": "Property. Model:'https://schema.org/Number'. Heading corresponding to this point of flight."
				},
				"latitude": {
				  "type": "number",
				  "description": "Property. Model:'https://schema.org/Number'. Latitude corresponding to this point of flight."
				},
				"longitude": {
				  "type": "number",
				  "description": "Property. Model:'https://schema.org/Number'. Longitude corresponding to this point of flight."
				}
			}
        },
        "videoFileFromFlight": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/url'. URL providing video file from the flight corresponding to this observation."
        },
		"thumbnailVideoFile": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/url'. URL providing thumbnail video file from the flight corresponding to this observation."
        },
		"metadataFileFromFlight": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/url'. URL providing metadata file from the flight corresponding to this observation."
        },
		"shapeFileWithFlightInformation": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/url'. URL providing shape file with flight information (i.e., flight trajectory) corresponding to this observation. The type of file is determined by the property 'storageShapeFileFormat'."
        },
		"storageShapeFileFormat": {
			"type": "string",
			"description": "Property. Entity's storage format. It can be a geoJSON or geoTiff file."
		},
        "detectedObject": {
          "type": "array",
          "description": "Property. It captures the objects detected in the flight and some related metadata, i.e., the trajectory of the object detected during the UAV flight, the typeOfObject (e.g., boat, person), the confidence of the detection, the position of object inside the frame, an estimate of the position of the object in the area by using the flight metadata.",
          "items": {
            "type": "object",
            "properties": {
              "trajectory": {
                "type": "array",
                "description": "Trajectory. Trajectory of the object detected during the UAV flight",
                "properties": {
                  "frame_filename": {
                    "type": "string"
                  },
				  "frame_num": {
                    "type": "number"
                  },
				  "timestamp": {
                    "type": "string",
					"format": "date-time",
					"description": "Property. Model:'https://schema.org/DateTime'. Reported date time creation corresponding to this observation."
                  },
				  "confidence": {
                    "type": "number",
					"description": "Property. Model:'https://schema.org/Number'. Reported confidence corresponding to the identification of the object in the specific frame."
                  },
				  "left": {
                    "type": "number",
					"description": "Property. Model:'https://schema.org/Number'. It captures the left pixel of the bounding box containing the object detected in the specific frame of the video."
                  },
				  "top": {
                    "type": "number",
					"description": "Property. Model:'https://schema.org/Number'. It captures the top pixel of the bounding box containing the object detected in the specific frame of the video."
                  },
				  "width": {
                    "type": "number",
					"description": "Property. Model:'https://schema.org/Number'. It captures the width of the bounding box containing the object detected in the specific frame of the video."
                  },
				  "height": {
                    "type": "number",
					"description": "Property. Model:'https://schema.org/Number'. It captures the height of the bounding box containing the object detected in the specific frame of the video."
                  },
				  "gpscoordinates": {
					"type": "array",
					"minItems": 2,
					"items": {
						"type": "number"
						},
					"description": "Property. Model:'https://schema.org/Number'. Estimated gps coordinates of the detected objected."
                  },
				  "gpsaltitude": {
                    "type": "number",
					"description": "Property. Model:'https://schema.org/Number'. Estimated altitude of the detected objected."
                  }, 
                }
              },
              "typeOfObject": {
                "type": "string",
				"description": "Property. Captures the name of the object detected, e.g., human, car, boat, building."
              },
              "id": {
                "type": "number"
              }
            }
          }
        }
      },
      "refUAV": {
        "type": "string",
        "format": "uri",
        "description": "Relationship. Flight is operated by UAV"
      }
    }
  ],
  "required": [
    "id",
    "type"
  ]
}